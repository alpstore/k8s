apiVersion: v1
kind: ConfigMap
metadata:
  name: build-scripts
  labels:
    app: alpinas
data:
  build-iso.sh: |
    #!/bin/sh
    set -e

    PROFILE="${PROFILE:-standard}"
    ARCH="${ARCH:-x86_64}"
    OUTDIR="${OUTDIR:-/build/iso}"
    TAG="${TAG:-edge}"

    echo "Building Alpine Linux ISO..."
    echo "Profile: $PROFILE"
    echo "Architecture: $ARCH"
    echo "Tag: $TAG"

    if [ ! -d "/build/aports" ]; then
        echo "Cloning aports repository..."
        git clone --depth=1 https://gitlab.alpinelinux.org/alpine/aports.git /build/aports
    fi

    # Copy AlpiNAS profile if exists
    if [ -f "/build/profile/mkimg.alpinas.sh" ]; then
        echo "Installing AlpiNAS profile..."
        cp /build/profile/mkimg.alpinas.sh /build/aports/scripts/mkimg.alpinas.sh
    fi

    mkdir -p "$OUTDIR"

    cd /build/aports
    sh scripts/mkimage.sh \
        --tag "$TAG" \
        --outdir "$OUTDIR" \
        --arch "$ARCH" \
        --repository "https://dl-cdn.alpinelinux.org/alpine/$TAG/main" \
        --repository "https://dl-cdn.alpinelinux.org/alpine/$TAG/community" \
        --profile "$PROFILE"

    echo "ISO build complete! Output in $OUTDIR"
    ls -lh "$OUTDIR"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-profile
  labels:
    app: alpinas
data:
  mkimg.alpinas.sh: |
    #!/bin/sh
    profile_alpinas() {
        profile_standard
        title="AlpiNAS"
        desc="AlpiNAS - Lightweight NAS distribution based on Alpine Linux"
        profile_abbrev="alpinas"
        kernel_addons=""
        apks="$apks
            bash
            vim
            curl
            wget
            htop
            git
            "
    }
